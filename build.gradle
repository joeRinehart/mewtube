buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
        classpath "org.grails.plugins:database-migration:3.0.3"
        classpath "org.liquibase:liquibase-core:3.5.3"

    }
}

version "0.1"
group "grails.bootstrap.kickstart"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    // Database. You'll need to change this to suit yours!

    /*
    SQL Server

    Add the following to your environment.yml.template:

    dataSource:
      driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
      url: jdbc:sqlserver://localhost;databaseName=grails-bootstrap-quickstart
      username: grails-bootstrap-quickstart
      password: password
     */
    runtime "com.microsoft.sqlserver:mssql-jdbc:6.1.0.jre8"

    /*
    Postgresql

    Add the following to your environment.yml.template:

    dataSource:
      driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
      url: jdbc:sqlserver://localhost;databaseName=grails-bootstrap-quickstart
      username: grails-bootstrap-quickstart
      password: password
     */
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1211'


    // Database migrations
    compile 'org.grails.plugins:database-migration:3.0.3'
    compile 'org.liquibase:liquibase-core:3.5.3'

    // Spring Security
    compile 'org.grails.plugins:spring-security-core:3.2.0.M1'

    // Amazon
    compile group: 'com.amazonaws', name: 'aws-java-sdk-core', version: '1.11.226'
    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.226'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.226'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-elastictranscoder', version: '1.11.226'

}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}


assets {
    minifyJs = true
    minifyCss = true
}

sourceSets {
    main {
        resources {
            srcDir 'grails-app/migrations'
        }
    }
}

// see https://blog.jdriven.com/2015/10/grails-goodness-use-different-external-configuration-files/
tasks.withType(JavaExec).each { task ->
    task.systemProperties System.properties
}
